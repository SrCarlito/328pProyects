
INTERRUPTS5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000090e  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d5  00000000  00000000  00000bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003aa  00000000  00000000  0000129b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  00001648  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e5  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002c8  00000000  00000000  00001ae9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001db1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_3>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 b4 00 	jmp	0x168	; 0x168 <__vector_5>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 83 00 	call	0x106	; 0x106 <main>
  78:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <Luz_verde>:
		
    }
}

void Luz_verde(){
	PORTD = (1<<PIND0);
  80:	81 e0       	ldi	r24, 0x01	; 1
  82:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	2f eb       	ldi	r18, 0xBF	; 191
  86:	8c e5       	ldi	r24, 0x5C	; 92
  88:	95 e1       	ldi	r25, 0x15	; 21
  8a:	21 50       	subi	r18, 0x01	; 1
  8c:	80 40       	sbci	r24, 0x00	; 0
  8e:	90 40       	sbci	r25, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <Luz_verde+0xa>
  92:	00 c0       	rjmp	.+0      	; 0x94 <Luz_verde+0x14>
  94:	00 00       	nop
	_delay_ms(7000);
	PORTD = 0x00;
  96:	1b b8       	out	0x0b, r1	; 11
  98:	08 95       	ret

0000009a <Intermitencia_verde>:
}

void Intermitencia_verde()
{
	int i = 5;
  9a:	85 e0       	ldi	r24, 0x05	; 5
  9c:	90 e0       	ldi	r25, 0x00	; 0
	while(i>0){
		PORTD = (1<<PIND0);
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	2b b9       	out	0x0b, r18	; 11
  a2:	3f e9       	ldi	r19, 0x9F	; 159
  a4:	46 e8       	ldi	r20, 0x86	; 134
  a6:	51 e0       	ldi	r21, 0x01	; 1
  a8:	31 50       	subi	r19, 0x01	; 1
  aa:	40 40       	sbci	r20, 0x00	; 0
  ac:	50 40       	sbci	r21, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <Intermitencia_verde+0xe>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <Intermitencia_verde+0x18>
  b2:	00 00       	nop
		_delay_ms(500);
		PORTD = 0x00;
  b4:	1b b8       	out	0x0b, r1	; 11
  b6:	3f e9       	ldi	r19, 0x9F	; 159
  b8:	46 e8       	ldi	r20, 0x86	; 134
  ba:	51 e0       	ldi	r21, 0x01	; 1
  bc:	31 50       	subi	r19, 0x01	; 1
  be:	40 40       	sbci	r20, 0x00	; 0
  c0:	50 40       	sbci	r21, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <Intermitencia_verde+0x22>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <Intermitencia_verde+0x2c>
  c6:	00 00       	nop
		_delay_ms(500);
		i++;
  c8:	01 96       	adiw	r24, 0x01	; 1
}

void Intermitencia_verde()
{
	int i = 5;
	while(i>0){
  ca:	18 16       	cp	r1, r24
  cc:	19 06       	cpc	r1, r25
  ce:	44 f3       	brlt	.-48     	; 0xa0 <Intermitencia_verde+0x6>
		i++;
	}

	
	
}
  d0:	08 95       	ret

000000d2 <Luz_ambar>:

void Luz_ambar(){
	PORTD = (1<<PIND1);
  d2:	82 e0       	ldi	r24, 0x02	; 2
  d4:	8b b9       	out	0x0b, r24	; 11
  d6:	2f eb       	ldi	r18, 0xBF	; 191
  d8:	87 e2       	ldi	r24, 0x27	; 39
  da:	99 e0       	ldi	r25, 0x09	; 9
  dc:	21 50       	subi	r18, 0x01	; 1
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	90 40       	sbci	r25, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <Luz_ambar+0xa>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <Luz_ambar+0x14>
  e6:	00 00       	nop
	_delay_ms(3000);
	PORTD = 0x00;
  e8:	1b b8       	out	0x0b, r1	; 11
  ea:	08 95       	ret

000000ec <Luz_roja>:
	
}

void Luz_roja(){
	
	PORTD = (1<<PIND2);
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	8b b9       	out	0x0b, r24	; 11
  f0:	2f e3       	ldi	r18, 0x3F	; 63
  f2:	82 e4       	ldi	r24, 0x42	; 66
  f4:	9f e0       	ldi	r25, 0x0F	; 15
  f6:	21 50       	subi	r18, 0x01	; 1
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	90 40       	sbci	r25, 0x00	; 0
  fc:	e1 f7       	brne	.-8      	; 0xf6 <Luz_roja+0xa>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <Luz_roja+0x14>
 100:	00 00       	nop
	_delay_ms(5000);
	PORTD = 0x00;
 102:	1b b8       	out	0x0b, r1	; 11
 104:	08 95       	ret

00000106 <main>:
void Luz_roja();


int main(void)
{
	cli();
 106:	f8 94       	cli
	
	PCICR = (1<<PCIE0);
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
	PCMSK0 = (1<<PCINT4)|(1<<PCINT5);
 10e:	80 e3       	ldi	r24, 0x30	; 48
 110:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__DATA_REGION_ORIGIN__+0xb>
	
	DDRD = 0x00;
 114:	1a b8       	out	0x0a, r1	; 10
	DDRB = 0xff;
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	84 b9       	out	0x04, r24	; 4
	PORTB = 0xff;
 11a:	85 b9       	out	0x05, r24	; 5
	sei();
 11c:	78 94       	sei
    while (1) 
    {
		
		Luz_verde();
 11e:	0e 94 40 00 	call	0x80	; 0x80 <Luz_verde>
		Intermitencia_verde();
 122:	0e 94 4d 00 	call	0x9a	; 0x9a <Intermitencia_verde>
		Luz_ambar();
 126:	0e 94 69 00 	call	0xd2	; 0xd2 <Luz_ambar>
		Luz_roja();
 12a:	0e 94 76 00 	call	0xec	; 0xec <Luz_roja>
 12e:	f7 cf       	rjmp	.-18     	; 0x11e <main+0x18>

00000130 <__vector_3>:
	_delay_ms(5000);
	PORTD = 0x00;
	
}

ISR(PCINT0_vect){
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	2f 93       	push	r18
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
	
	PORTD = (1<<PIND3);
 140:	88 e0       	ldi	r24, 0x08	; 8
 142:	8b b9       	out	0x0b, r24	; 11
 144:	2f e3       	ldi	r18, 0x3F	; 63
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	93 e0       	ldi	r25, 0x03	; 3
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <__vector_3+0x1a>
 152:	00 c0       	rjmp	.+0      	; 0x154 <__vector_3+0x24>
 154:	00 00       	nop
	_delay_ms(1000);
	PORTD = 0x00;
 156:	1b b8       	out	0x0b, r1	; 11
	
}
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	2f 91       	pop	r18
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <__vector_5>:

ISR(PCINT2_vect){
 168:	1f 92       	push	r1
 16a:	0f 92       	push	r0
 16c:	0f b6       	in	r0, 0x3f	; 63
 16e:	0f 92       	push	r0
 170:	11 24       	eor	r1, r1
 172:	2f 93       	push	r18
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
	PORTD = (1<<PIND4);
 178:	80 e1       	ldi	r24, 0x10	; 16
 17a:	8b b9       	out	0x0b, r24	; 11
 17c:	2f e3       	ldi	r18, 0x3F	; 63
 17e:	8d e0       	ldi	r24, 0x0D	; 13
 180:	93 e0       	ldi	r25, 0x03	; 3
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <__vector_5+0x1a>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <__vector_5+0x24>
 18c:	00 00       	nop
	_delay_ms(1000);
	PORTD = 0x00;
 18e:	1b b8       	out	0x0b, r1	; 11
	
}
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	2f 91       	pop	r18
 196:	0f 90       	pop	r0
 198:	0f be       	out	0x3f, r0	; 63
 19a:	0f 90       	pop	r0
 19c:	1f 90       	pop	r1
 19e:	18 95       	reti

000001a0 <_exit>:
 1a0:	f8 94       	cli

000001a2 <__stop_program>:
 1a2:	ff cf       	rjmp	.-2      	; 0x1a2 <__stop_program>
